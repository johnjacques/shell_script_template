#!/usr/bin/env bash
######################################################################
#
# set_background.sh
#
# Set the background on gnome...
#
######################################################################

# See https://travcap.ca/2022/06/11/set-the-gnome-desktop-background-to-randomly-change/

# Export everything
set -a

# Version
VERSION=__VERSION__

# Name
SCRIPT_NAME=$(basename "${0}")

# Script directory
SCRIPT_DIR=`dirname $0`
pushd ${SCRIPT_DIR} >/dev/null 2>&1
SCRIPT_DIR=$(pwd)
popd >/dev/null 2>&1

#############
# Functions #
#############

function getdv {
    if [ -f /etc/os-release ]; then
	# freedesktop.org and systemd
	. /etc/os-release
	DISTRO=$NAME
	VER=$VERSION_ID
    elif type lsb_release >/dev/null 2>&1; then
	# linuxbase.org
	DISTRO=$(lsb_release -si)
	VER=$(lsb_release -sr)
    else
	# Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
	DISTRO=$(uname -s)
	VER=$(uname -r)
    fi

    echo "$DISTRO:$VER"
}

function script_info {
    echo "--> ${SCRIPT_NAME} version is ${VERSION}"
    echo "--> running on $(getdv)"
}

############
# Defaults #
############

BACKGROUNDS="${HOME}/Pictures/Backgrounds"
KEEP_TEMP="false"

######################################################################
# usage_
#
# Display usage and exit with the given code.

function usage {

    cat << EOF
${SCRIPT_NAME} -b directory [-h] [-k] [-v]
  -b : A directory containing background images. [default: $BACKGROUNDS]
  -h : Display this wonderful help screen.
  -k : Keep temporary output instead of deleting it.
  -v : Display the version.
EOF
    exit $1

}

##################################
# Parse the command line options #
##################################

while getopts "b:hkv" option ; do

    case $option in

	b)
	    BACKGROUNDS=$OPTARG
	    ;;

        h)
            usage 0
            ;;

	k)
	    KEEP_TEMP="true"
	    ;;

	v)
	    script_info
	    exit 0
	    ;;

        *)
            usage 1
            ;;

    esac

done

shift $(($OPTIND - 1))

##########################################
# Capture stdout and stdin in a log file #
##########################################

exec 3<&1
exec 4<&2

# Create a log file and redirect. 
TEMP=$(mktemp -d /tmp/${SCRIPT_NAME}.XXXXXXXXXXXX)
LOG=$TEMP/log
PIPE=$TEMP/pipe

if [ "$KEEP_TEMP" = "true" ]
then
    echo "--> Saving temporary files in ${TEMP}"
else
    trap "rm -rf $TEMP" EXIT
fi

mknod $PIPE p
tee <$PIPE $LOG &
exec 1>&-
exec 1>$PIPE
exec 2>&-
exec 2>$PIPE

#######################
# Do something useful #
#######################

script_info

# This only makes sense when logged in and running gnome!

ps --user="$(id -un)" | grep 'gnome-shell$' >/dev/null 2>&1

if [ 0 -ne $? ]
then
    exit 0
fi

# If DBUS_SESSION_BUS_ADDRESS is unset or "", set it.  This wonÂ´t be
# set when started by cron, for example, but is required for access to
# the gnome environment.

if [ ! -n "${DBUS_SESSION_BUS_ADDRESS}" ]
then
    export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/$(id -u)/bus"
fi

image=$(ls ${BACKGROUNDS}/* | sort -R | tail -1)
echo "Setting background to $image" >> ${TEMP}/log
gsettings set org.gnome.desktop.background picture-uri file:///${image}
gsettings set org.gnome.desktop.background picture-uri-dark file:///${image}

# Old version (XFCE)
#if [ "XFCE" = "$XDG_CURRENT_DESKTOP" ]
#then
#    # This is just from playing around, but the following seems to work.
#    # 1) Get workspaces with the following command.
#    for ws in $(xfconf-query --channel xfce4-desktop --list \
#		    | grep -v monitor0 | grep last-image)
#    do
#	xfconf-query --channel xfce4-desktop --property $ws --set ${1}
#    done
#fi

#############################
# Restore stdout and stderr #
#############################

rm -f $PIPE
exec 1<&3 3<&-
exec 2<&4 4<&-

##############
# That's all #
##############

exit 0
